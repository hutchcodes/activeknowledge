// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AKS.Infrastructure.Data;

namespace AKS.Infrastructure.Migrations
{
    [DbContext(typeof(AKSContext))]
    [Migration("20181124025827_RelatedTopics")]
    partial class RelatedTopics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AKS.Infrastructure.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Order");

                    b.Property<Guid?>("ParentCategoryId");

                    b.Property<Guid>("ProjectId");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryId1");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.CategoryTopic", b =>
                {
                    b.Property<Guid>("ProjectId");

                    b.Property<Guid>("ParentCategoryId");

                    b.Property<Guid>("TopicId");

                    b.Property<Guid?>("CategoryId");

                    b.Property<int>("Order");

                    b.HasKey("ProjectId", "ParentCategoryId", "TopicId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("CategoryTopic");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.CollectionElement", b =>
                {
                    b.Property<Guid>("CollectionElementId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ProjectId");

                    b.Property<Guid>("TopicId");

                    b.HasKey("CollectionElementId");

                    b.HasIndex("TopicId");

                    b.ToTable("CollectionElement");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CustomCssId");

                    b.Property<string>("LogoFileName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("LogoFileName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ProjectId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.ReferencedFragment", b =>
                {
                    b.Property<Guid>("ProjectId");

                    b.Property<Guid>("ParentTopicId");

                    b.Property<Guid>("ChildTopicId");

                    b.HasKey("ProjectId", "ParentTopicId", "ChildTopicId");

                    b.HasIndex("ChildTopicId");

                    b.HasIndex("ParentTopicId");

                    b.ToTable("TopicFragment");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.RelatedTopic", b =>
                {
                    b.Property<Guid>("ProjectId");

                    b.Property<Guid>("ParentTopicId");

                    b.Property<Guid>("ChildTopicId");

                    b.HasKey("ProjectId", "ParentTopicId", "ChildTopicId");

                    b.HasIndex("ChildTopicId");

                    b.HasIndex("ParentTopicId");

                    b.ToTable("RelatedTopic");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ProjectId");

                    b.Property<Guid?>("TopicId");

                    b.HasKey("TagId");

                    b.HasIndex("TopicId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Topic", b =>
                {
                    b.Property<Guid>("TopicId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CollectionElementId");

                    b.Property<Guid?>("DefaultCategoryId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentName");

                    b.Property<Guid?>("FileResourceId");

                    b.Property<Guid?>("ImageResourceId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ProjectId");

                    b.Property<string>("TopicContent");

                    b.Property<int>("TopicTypeId");

                    b.HasKey("TopicId");

                    b.HasIndex("CollectionElementId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Category", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId1");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.CategoryTopic", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Category")
                        .WithMany("Topics")
                        .HasForeignKey("CategoryId");

                    b.HasOne("AKS.Infrastructure.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.CollectionElement", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Topic", "Topic")
                        .WithMany("CollectionElements")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Project", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.ReferencedFragment", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Topic", "ChildTopic")
                        .WithMany("FragmentReferencedBy")
                        .HasForeignKey("ChildTopicId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AKS.Infrastructure.Entities.Topic", "ParentTopic")
                        .WithMany("ReferencedFragments")
                        .HasForeignKey("ParentTopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.RelatedTopic", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Topic", "ChildTopic")
                        .WithMany("RelatedFromTopics")
                        .HasForeignKey("ChildTopicId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AKS.Infrastructure.Entities.Topic", "ParentTopic")
                        .WithMany("RelatedToTopics")
                        .HasForeignKey("ParentTopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Tag", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.Topic")
                        .WithMany("Tags")
                        .HasForeignKey("TopicId");
                });

            modelBuilder.Entity("AKS.Infrastructure.Entities.Topic", b =>
                {
                    b.HasOne("AKS.Infrastructure.Entities.CollectionElement")
                        .WithMany("ElementTopics")
                        .HasForeignKey("CollectionElementId");
                });
#pragma warning restore 612, 618
        }
    }
}
