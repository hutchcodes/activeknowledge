@implements IDisposable
@using CKEditor.Blazor

<textarea id="@Id">@EditorContent</textarea>

@functions {

    [Parameter]
    private string EditorContent { get; set; }

    [Parameter]
    private Action<string> EditorContentChanged { get; set; }

    private string Id { get; set; } = $"ck{Guid.NewGuid().ToString().Replace("-", "")}";

    [Parameter]
    private Action<string> OnEditorChanged { get; set; }

    protected override void OnAfterRender()
    {
        CKEditorJsInterop.InitializeEditor(Id, EditorContent);
    }

    private void ThisEditorUpdate(object sender, string editorText)
    {
        EditorContent = editorText;
        OnEditorChanged?.Invoke(editorText);
    }

    public string GetEditorText()
    {
        return EditorContent;
    }
    public async void Dispose()
    {
        await CKEditorJsInterop.DestroyCKEditor(Id);
    }
}