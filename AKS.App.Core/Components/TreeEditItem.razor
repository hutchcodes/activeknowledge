@typeparam TItem

<CascadingValue Name="Parent" Value="this">
    <li role="treeitem" draggable="true" class="dropBeforeClass" style="padding-top:10px; border: 1px solid red;"
        @ondragstart="@(() => HandleDragStart(this))" @ondragstart:stopPropagation="true"
        ondragover="event.preventDefault();"
        @ondrop="HandleDropBefore" @ondrop:stopPropagation="true"
        @ondragenter="HandleDragEnterBefore" @ondragenter:stopPropagation="true"
        @ondragleave="HandleDragLeaveBefore" @ondragleave:stopPropagation="true">
        @if (ShowInsertAbove)
        {
        <div>
            <i class="icon-arrow-right" />
        </div>
        }
        <div>
            <span>
                @if (isExpanded)
                {
                    <i class="icon-minus-circle" @onclick="ToggleExpandCollapse"></i>
                }
                else
                {
                    <i class="icon-plus-circle" @onclick="ToggleExpandCollapse"></i>
                }
            </span>
            <span class="tree-item-text"
                  ondragover="event.preventDefault();"
                  @ondrop="HandleDrop" @ondrop:stopPropagation="true"
                  @ondragenter="HandleDragEnter" @ondragenter:stopPropagation="true"
                  @ondragleave="HandleDragLeave" @ondragleave:stopPropagation="true">
                @if (Options.DisplayTemplate != null)
                {
                    @Options.DisplayTemplate(Item)
                    <button @onclick="(() => RemoveItem(Item))" class="btn btn-sm btn-outline-primary">D</button>
                }
                else
                {
                    @Item?.ToString()
                }
                @if (ShowInsertBelow)
                {
                    <div class="tree-insert-below">
                        <i class="icon-corner-down-right" />
                    </div>
                }
            </span>
            @if (isExpanded)
            {
                <ul style="list-style:none" role="group">
                    @foreach (var n in Items)
                    {
                        @if (Options.ChildTemplate != null)
                        {
                            @Options.ChildTemplate(n)
                        }
                        else
                        {
                            @n.ToString();
                        }
                    }
                    @foreach (var t in Topics)
                    {
                        <div>foo</div>
                        @if (Options.TopicTemplate != null)
                        {
                            @Options.TopicTemplate(t)
                        }
                        else
                        {
                            @t.Topic.Title
                        }
                    }
                </ul>
            }
        </div>
    </li>

</CascadingValue>