<CascadingValue Value=this>
    <ul class="nav nav-tabs">

        @foreach (TabPage tabPage in Pages)
        {
            <li class="nav-item">
                @*the tabindex="" keeps the link styled as an active link despite the lack of an href attribute*@
                <a class="nav-link @GetButtonClass(tabPage)" onclick="@((Action)(() => ActivatePage(tabPage)))" tabindex="">@tabPage.Text</a>
            </li>
        }
    </ul>
    @ChildContent
</CascadingValue>
@code {
    // Next line is needed so we are able to add <TabPage> components inside
    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    public TabPageBase? ActivePage { get; set; }

    private List<TabPageBase> Pages = new List<TabPageBase>();

    internal void AddPage(TabPageBase tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
        {
            ActivePage = tabPage;
        }
        StateHasChanged();
    }

    private string GetButtonClass(TabPageBase page)
    {
        return page == ActivePage ? "active" : "";
    }
    public void ActivatePage(TabPageBase page)
    {
        ActivePage = page;
        StateHasChanged();
    }

}